<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
  <key>fileTypes</key>
  <array>
    <string>txt</string>
  </array>
  <key>name</key>
  <string>Fitnesse</string>
  <key>patterns</key>
  <array>
    <dict>
      <key>match</key>
      <string>comment\.line\.number-sign\.fitnesse</string>
      <key>name</key>
      <string>comment.line.number-sign.fitnesse</string>
    </dict>
    <dict>
      <key>match</key>
      <string>constant\.numeric\.fitnesse</string>
      <key>name</key>
      <string>constant.numeric.fitnesse</string>
    </dict>
    <dict>
      <key>match</key>
      <string>entity\.name\.function\.fitnesse</string>
      <key>name</key>
      <string>entity.name.function.fitnesse</string>
    </dict>
    <dict>
      <key>match</key>
      <string>entity\.name\.type\.fitnesse</string>
      <key>name</key>
      <string>entity.name.type.fitnesse</string>
    </dict>
    <dict>
      <key>match</key>
      <string>entity\.name\.tag\.fitnesse</string>
      <key>name</key>
      <string>entity.name.tag.fitnesse</string>
    </dict>
    <dict>
      <key>match</key>
      <string>entity\.name\.section\.fitnesse</string>
      <key>name</key>
      <string>entity.name.section.fitnesse</string>
    </dict>
    <dict>
      <key>match</key>
      <string>invalid\.illegal\.fitnesse</string>
      <key>name</key>
      <string>invalid.illegal.fitnesse</string>
    </dict>
    <dict>
      <key>match</key>
      <string>invalid\.deprecated\.fitnesse</string>
      <key>name</key>
      <string>invalid.deprecated.fitnesse</string>
    </dict>
    <dict>
      <key>match</key>
      <string>keyword\.control\.fitnesse</string>
      <key>name</key>
      <string>keyword.control.fitnesse</string>
    </dict>
    <dict>
      <key>match</key>
      <string>keyword\.operator\.fitnesse</string>
      <key>name</key>
      <string>keyword.operator.fitnesse</string>
    </dict>
    <dict>
      <key>match</key>
      <string>keyword\.other\.fitnesse</string>
      <key>name</key>
      <string>keyword.other.fitnesse</string>
    </dict>
    <dict>
      <key>match</key>
      <string>storage\.type\.fitnesse</string>
      <key>name</key>
      <string>storage.type.fitnesse</string>
    </dict>
    <dict>
      <key>match</key>
      <string>storage\.modifier\.fitnesse</string>
      <key>name</key>
      <string>storage.modifier.fitnesse</string>
    </dict>
    <dict>
      <key>match</key>
      <string>support\.function\.fitnesse</string>
      <key>name</key>
      <string>support.function.fitnesse</string>
    </dict>
    <dict>
      <key>match</key>
      <string>support\.class\.fitnesse</string>
      <key>name</key>
      <string>support.class.fitnesse</string>
    </dict>
    <dict>
      <key>match</key>
      <string>support\.type\.fitnesse</string>
      <key>name</key>
      <string>support.type.fitnesse</string>
    </dict>
    <dict>
      <key>match</key>
      <string>support\.constant\.fitnesse</string>
      <key>name</key>
      <string>support.constant.fitnesse</string>
    </dict>
    <dict>
      <key>match</key>
      <string>support\.variable\.fitnesse</string>
      <key>name</key>
      <string>support.variable.fitnesse</string>
    </dict>
    <dict>
      <key>match</key>
      <string>support\.other\.fitnesse</string>
      <key>name</key>
      <string>support.other.fitnesse</string>
    </dict>
    <dict>
      <key>match</key>
      <string>string\.quoted\.single\.fitnesse</string>
      <key>name</key>
      <string>string.quoted.single.fitnesse</string>
    </dict>
    <dict>
      <key>match</key>
      <string>string\.unquoted\.fitnesse</string>
      <key>name</key>
      <string>string.unquoted.fitnesse</string>
    </dict>
    <dict>
      <key>match</key>
      <string>string\.interpolated\.fitnesse</string>
      <key>name</key>
      <string>string.interpolated.fitnesse</string>
    </dict>
    <dict>
      <key>match</key>
      <string>string\.regexp\.fitnesse</string>
      <key>name</key>
      <string>string.regexp.fitnesse</string>
    </dict>
    <dict>
      <key>match</key>
      <string>string\.other\.fitnesse</string>
      <key>name</key>
      <string>string.other.fitnesse</string>
    </dict>
    <dict>
      <key>match</key>
      <string>variable\.parameter\.fitnesse</string>
      <key>name</key>
      <string>variable.parameter.fitnesse</string>
    </dict>
    <dict>
      <key>match</key>
      <string>variable\.language\.fitnesse</string>
      <key>name</key>
      <string>variable.language.fitnesse</string>
    </dict>
    <dict>
      <key>match</key>
      <string>variable\.other\.fitnesse</string>
      <key>name</key>
      <string>variable.other.fitnesse</string>
    </dict>

    <!-- scenario header -->
    <dict>
      <key>begin</key>
      <string>\|(?=\s*scenario)</string>
      <key>beginCaptures</key>
      <dict>
        <key>0</key>
        <dict>
          <key>name</key>
          <string>keyword.other.fitnesse</string>
        </dict>
      </dict>
      <key>end</key>
      <string>\|\s*$</string>
      <key>endCaptures</key>
      <dict>
        <key>0</key>
        <dict>
          <key>name</key>
          <string>keyword.other.fitnesse</string>
        </dict>
      </dict>
      <key>patterns</key>
      <array>
        <dict>
          <key>match</key>
          <string>scenario</string>
          <key>name</key>
          <string>storage.type.fitnesse</string>
        </dict>
        <dict>
          <key>captures</key>
          <dict>
            <key>1</key>
            <dict>
              <key>name</key>
              <string>variable.language.fitnesse</string>
            </dict>
            <key>2</key>
            <dict>
              <key>name</key>
              <string>keyword.other.fitnesse</string>
            </dict>
            <key>3</key>
            <dict>
              <key>name</key>
              <string>variable.parameter.fitnesse</string>
            </dict>
          </dict>
          <key>match</key>
          <string>([A-Za-z][A-Za-z0-9_ ]+)\s*(\|)\s*((?:\p{L}|\d|_)+)</string>
        </dict>
        <dict>
          <key>match</key>
          <string>[A-Za-z][A-Za-z0-9_ ]+</string>
          <key>name</key>
          <string>variable.language.fitnesse</string>
        </dict>
        <dict>
          <key>match</key>
          <string>\|</string>
          <key>name</key>
          <string>keyword.other.fitnesse</string>
        </dict>
      </array>
    </dict>

    <!-- script call header -->
    <dict>
      <key>captures</key>
      <dict>
        <key>1</key>
        <dict>
          <key>name</key>
          <string>keyword.other.fitnesse</string>
        </dict>
        <key>2</key>
        <dict>
          <key>name</key>
          <string>storage.type.fitnesse</string>
        </dict>
        <key>3</key>
        <dict>
          <key>name</key>
          <string>keyword.other.fitnesse</string>
        </dict>
        <key>5</key>
        <dict>
          <key>name</key>
          <string>storage.type.fitnesse</string>
        </dict>
        <key>6</key>
        <dict>
          <key>name</key>
          <string>keyword.other.fitnesse</string>
        </dict>
      </dict>
      <key>match</key>
      <string>(\|)\s*(script)\s*(\|)(\s*(remote)\s*(\|))?</string>
    </dict>

    <!-- "check eval" -->
    <dict>
      <key>captures</key>
      <dict>
        <key>1</key>
        <dict>
          <key>name</key>
          <string>keyword.other.fitnesse</string>
        </dict>
        <key>2</key>
        <dict>
          <key>name</key>
          <string>storage.type.fitnesse</string>
        </dict>
        <key>3</key>
        <dict>
          <key>name</key>
          <string>keyword.other.fitnesse</string>
        </dict>
        <key>5</key>
        <dict>
          <key>name</key>
          <string>storage.type.fitnesse</string>
        </dict>
        <key>6</key>
        <dict>
          <key>name</key>
          <string>keyword.other.fitnesse</string>
        </dict>
      </dict>
      <key>match</key>
      <string>(\|)\s*(check)\s*(\|)(\s*(eval)\s*(\|))?</string>
    </dict>

    <!-- eval only -->
    <dict>
      <key>captures</key>
      <dict>
        <key>1</key>
        <dict>
          <key>name</key>
          <string>keyword.other.fitnesse</string>
        </dict>
        <key>2</key>
        <dict>
          <key>name</key>
          <string>storage.type.fitnesse</string>
        </dict>
        <key>3</key>
        <dict>
          <key>name</key>
          <string>keyword.other.fitnesse</string>
        </dict>
      </dict>
      <key>match</key>
      <string>(\|)\s*(eval)\s*(\|)</string>
    </dict>

    <!-- query:remote -->
    <dict>
      <key>match</key>
      <string>(?i:query:remote)</string>
      <key>name</key>
      <string>storage.type.fitnesse</string>
    </dict>
    

    <!-- fitnesse define -->
    <dict>
      <key>captures</key>
      <dict>
        <key>1</key>
        <dict>
          <key>name</key>
          <string>keyword.other.fitnesse</string>
        </dict>
        <key>2</key>
        <dict>
          <key>name</key>
          <string>storage.type.fitnesse</string>
        </dict>
        <key>3</key>
        <dict>
          <key>name</key>
          <string>variable.parameter.fitnesse</string>
        </dict>
        <key>4</key>
        <dict>
          <key>name</key>
          <string>keyword.other.fitnesse</string>
        </dict>
        <key>5</key>
        <dict>
          <key>name</key>
          <string>string.quoted.double.fitnesse</string>
        </dict>
        <key>6</key>
        <dict>
          <key>name</key>
          <string>keyword.other.fitnesse</string>
        </dict>
      </dict>
      <key>match</key>
      <string>(\!)(define)\s*((?:\p{L}|\d|_)+)\s*(\{)([^\}]+)(\})</string>
    </dict>

    <!-- test -->
    <!-- <dict>
      <key>match</key>
      <string>\!\-.*\-\!</string>
      <key>name</key>
      <string>invalid.deprecated.fitnesse</string>
    </dict> -->

    <!-- <dict>
      <key>begin</key>
      <string>\!\-</string>
      <key>beginCaptures</key>
      <dict>
        <key>0</key>
        <dict>
          <key>name</key>
          <string>invalid.deprecated.fitnesse</string>
        </dict>
      </dict>

      <key>end</key>
      <string>\-\!</string>
      <key>endCaptures</key>
      <dict>
        <key>0</key>
        <dict>
          <key>name</key>
          <string>invalid.deprecated.fitnesse</string>
        </dict>
      </dict>

      <key>patterns</key>
      <array>
        <dict>
          <key>include</key>
          <string>$self</string>
        </dict>
      </array>
    </dict>

    <dict>
      <key>begin</key>
      <string>\|(?=\s*aaa)</string>
      <key>beginCaptures</key>
      <dict>
        <key>0</key>
        <dict>
          <key>name</key>
          <string>entity.name.function.fitnesse</string>
        </dict>
      </dict>

      <key>end</key>
      <string>\|\s*$</string>
      <key>endCaptures</key>
      <dict>
        <key>0</key>
        <dict>
          <key>name</key>
          <string>entity.name.function.fitnesse</string>
        </dict>
      </dict>

      <key>patterns</key>
      <array>
      </array>
    </dict> -->

    <!-- comment 1 -->
    <dict>
      <key>begin</key>
      <string>&lt;#</string>
      <key>beginCaptures</key>
      <dict>
        <key>0</key>
        <dict>
          <key>name</key>
          <string>punctuation.start.definition.comment.block.fitnesse</string>
        </dict>
      </dict>
      <key>end</key>
      <string>#&gt;</string>
      <key>endCaptures</key>
      <dict>
        <key>0</key>
        <dict>
          <key>name</key>
          <string>punctuation.end.definition.comment.block.fitnesse</string>
        </dict>
      </dict>
      <key>name</key>
      <string>comment.block.fitnesse</string>
      <key>patterns</key>
      <array>
        <dict>
          <key>include</key>
          <string>#commentEmbeddedDocs</string>
        </dict>
      </array>
    </dict>
    
    <!-- comment 2 -->
    <dict>
      <key>begin</key>
      <string>(?&lt;![\\-])#</string>
      <key>end</key>
      <string>$</string>
      <key>name</key>
      <string>comment.line.number-sign.fitnesse</string>
      <key>patterns</key>
      <array>
        <dict>
          <key>include</key>
          <string>#commentEmbeddedDocs</string>
        </dict>
      </array>
    </dict>

    <!-- powershell -->
    <dict>
      <key>match</key>
      <string>[2-6]&gt;&amp;1|&gt;&gt;|&gt;|&lt;&lt;|&lt;|&gt;|&gt;\||[1-6]&gt;|[1-6]&gt;&gt;</string>
      <key>name</key>
      <string>keyword.operator.redirection.fitnesse</string>
    </dict>

    <dict>
      <key>include</key>
      <string>#commands</string>
    </dict>

    <dict>
      <key>include</key>
      <string>#variable</string>
    </dict>
    <dict>
      <key>include</key>
      <string>#interpolatedStringContent</string>
    </dict>
    <dict>
      <key>include</key>
      <string>#function</string>
    </dict>
    <dict>
      <key>include</key>
      <string>#attribute</string>
    </dict>
    <dict>
      <key>include</key>
      <string>#type</string>
    </dict>

    <!-- double quoted string -->
    <dict>
      <key>begin</key>
      <string>(?&lt;!(?&lt;!`)")"</string>
      <key>end</key>
      <string>"(?!")</string>
      <key>name</key>
      <string>string.quoted.double.fitnesse</string>
      <key>patterns</key>
      <array>
        <dict>
          <key>include</key>
          <string>#variableFitEscape</string>
        </dict>
        <!-- not support
        <dict>
          <key>include</key>
          <string>#variableNoProperty</string>
        </dict> -->
        <dict>
          <key>include</key>
          <string>#doubleQuotedStringEscapes</string>
        </dict>
        <dict>
          <key>include</key>
          <string>#interpolation</string>
        </dict>
        <dict>
          <key>match</key>
          <string>`\s*$</string>
          <key>name</key>
          <string>keyword.other.fitnesse</string>
        </dict>
      </array>
    </dict>

    <dict>
      <key>comment</key>
      <string>Needed to parse stuff correctly in 'argument mode'. (See about_parsing.)</string>
      <key>include</key>
      <string>#doubleQuotedStringEscapes</string>
    </dict>

    <!-- single quoted string -->
    <dict>
      <key>begin</key>
      <string>(?&lt;!')'</string>
      <key>end</key>
      <string>'(?!')</string>
      <key>name</key>
      <string>string.quoted.single.fitnesse</string>
      <key>patterns</key>
      <array>
        <dict>
          <key>include</key>
          <string>#variableFitEscape</string>
        </dict>
        <dict>
          <key>match</key>
          <string>''</string>
          <key>name</key>
          <string>constant.character.escape.fitnesse</string>
        </dict>
      </array>
    </dict>

    <dict>
      <key>begin</key>
      <string>\@"(?=$)</string>
      <key>end</key>
      <string>^"@</string>
      <key>name</key>
      <string>string.quoted.double.heredoc.fitnesse</string>
      <key>patterns</key>
      <array>
        <dict>
          <key>include</key>
          <string>#variableNoProperty</string>
        </dict>
        <dict>
          <key>include</key>
          <string>#doubleQuotedStringEscapes</string>
        </dict>
        <dict>
          <key>include</key>
          <string>#interpolation</string>
        </dict>
      </array>
    </dict>

    <dict>
      <key>begin</key>
      <string>\@'(?=$)</string>
      <key>end</key>
      <string>^'@</string>
      <key>name</key>
      <string>string.quoted.single.heredoc.fitnesse</string>
      <key>patterns</key>
      <array>
        <dict>
          <key>match</key>
          <string>''</string>
          <key>name</key>
          <string>constant.character.escape.fitnesse</string>
        </dict>
      </array>
    </dict>

    <dict>
      <key>include</key>
      <string>#numericConstant</string>
    </dict>
    
    <dict>
      <key>begin</key>
      <string>@\(</string>
      <key>captures</key>
      <dict>
        <key>0</key>
        <dict>
          <key>name</key>
          <string>keyword.other.fitnesse</string>
        </dict>
      </dict>
      <key>end</key>
      <string>\)</string>
      <key>name</key>
      <string>meta.group.array-expression.fitnesse</string>
      <key>patterns</key>
      <array>
        <dict>
          <key>include</key>
          <string>$self</string>
        </dict>
      </array>
    </dict>

    <dict>
      <key>begin</key>
      <string>\$\(</string>
      <key>captures</key>
      <dict>
        <key>0</key>
        <dict>
          <key>name</key>
          <string>keyword.other.fitnesse</string>
        </dict>
      </dict>
      <key>comment</key>
      <string>TODO: move to repo; make recursive.</string>
      <key>end</key>
      <string>\)</string>
      <key>name</key>
      <string>meta.group.complex.subexpression.fitnesse</string>
      <key>patterns</key>
      <array>
        <dict>
          <key>include</key>
          <string>$self</string>
        </dict>
      </array>
    </dict>

    <dict>
      <key>match</key>
      <string>(?&lt;!\w)-([ci]?[lg][te]|eq|ne)</string>
      <key>name</key>
      <string>keyword.operator.logical.fitnesse</string>
    </dict>
    <dict>
      <key>match</key>
      <string>(?i:[a-z][a-z0-9]+-?[a-z][a-z0-9]+)(?i:\.(?i:exe|cmd|bat|ps1|dll))</string>
      <key>name</key>
      <string>support.function.fitnesse</string>
    </dict>
    <dict>
      <key>match</key>
      <string>(?&lt;!\w)((?i:begin|break|catch|continue|data|define|do|dynamicparam|else|elseif|end|exit|filter|finally|for|foreach(?!-object)|from|if|in|inlinescript|parallel|param|process|return|switch|throw|trap|try|until|using|var|where(?!=-object)|while)|%|\?)(?!\w)</string>
      <key>name</key>
      <string>keyword.control.fitnesse</string>
    </dict>
    <dict>
      <key>captures</key>
      <dict>
        <key>1</key>
        <dict>
          <key>name</key>
          <string>storage.type.fitnesse</string>
        </dict>
        <key>2</key>
        <dict>
          <key>name</key>
          <string>entity.name.function</string>
        </dict>
      </dict>
      <key>comment</key>
      <string>capture should be entity.name.type, but it doesn't provide a good color in the default schema.</string>
      <key>match</key>
      <string>(?&lt;!\w)((?i:class)|%|\?)(?:\s)+((?:\p{L}|\d|_|-|)+)\b</string>
    </dict>
    <dict>
      <key>match</key>
      <string>(?&lt;!\w)-(?i:is(?:not)?|as)\b</string>
      <key>name</key>
      <string>keyword.operator.comparison.fitnesse</string>
    </dict>
    <dict>
      <key>match</key>
      <string>(?&lt;!\w)-(?i:[ic]?(?:eq|ne|[gl][te]|(?:not)?(?:like|match|contains|in)|replace))(?!\p{L})</string>
      <key>name</key>
      <string>keyword.operator.comparison.fitnesse</string>
    </dict>
    <dict>
      <key>match</key>
      <string>(?&lt;!\w)-(?i:join|split)(?!\p{L})|!</string>
      <key>name</key>
      <string>keyword.operator.unary.fitnesse</string>
    </dict>
    <dict>
      <key>match</key>
      <string>(?&lt;!\w)-(?i:and|or|not|xor)(?!\p{L})|!</string>
      <key>name</key>
      <string>keyword.operator.logical.fitnesse</string>
    </dict>
    <dict>
      <key>match</key>
      <string>(?&lt;!\w)-(?i:band|bor|bnot|bxor)(?!\p{L})</string>
      <key>name</key>
      <string>keyword.operator.bitwise.fitnesse</string>
    </dict>
    <dict>
      <key>match</key>
      <string>(?&lt;!\w)-(?i:f)(?!\p{L})</string>
      <key>name</key>
      <string>keyword.operator.string-format.fitnesse</string>
    </dict>
    <dict>
      <key>match</key>
      <string>[+%*/-]?=|[+/*%-]</string>
      <key>name</key>
      <string>keyword.operator.assignment.fitnesse</string>
    </dict>
    <dict>
      <key>match</key>
      <string>\|{2}|&amp;{2}|;</string>
      <key>name</key>
      <string>keyword.other.statement-separator.fitnesse</string>
    </dict>
    <dict>
      <key>match</key>
      <string>&amp;|(?&lt;!\w)\.(?= )|`|,|\|</string>
      <key>name</key>
      <string>keyword.operator.other.fitnesse</string>
    </dict>
    <dict>
      <key>comment</key>
      <string>This is very imprecise, is there a syntax for 'must come after...' </string>
      <key>match</key>
      <string>(?&lt;!\s|^)\.\.(?=\d|\(|\$)</string>
      <key>name</key>
      <string>keyword.operator.range.fitnesse</string>
    </dict>
  </array>
  <key>repository</key>
  <dict>

    <!-- sys:attribute -->
    <key>attribute</key>
    <dict>
      <key>begin</key>
      <string>\[(\p{L}|\.|``\d+)+(?=\()</string>
      <key>beginCaptures</key>
      <dict>
        <key>0</key>
        <dict>
          <key>name</key>
          <string>entity.name.tag</string>
        </dict>
        <key>1</key>
        <dict>
          <key>name</key>
          <string>entity.name.tag</string>
        </dict>
      </dict>
      <key>end</key>
      <string>\]</string>
      <key>endCaptures</key>
      <dict>
        <key>0</key>
        <dict>
          <key>name</key>
          <string>entity.name.tag</string>
        </dict>
      </dict>
      <key>patterns</key>
      <array>
        <dict>
          <key>begin</key>
          <string>\(</string>
          <key>end</key>
          <string>\)</string>
          <key>name</key>
          <string>entity.other.attribute-name</string>
          <key>patterns</key>
          <array>
            <dict>
              <key>captures</key>
              <dict>
                <key>0</key>
                <dict>
                  <key>name</key>
                  <string>entity.other.attribute.parameter.fitnesse</string>
                </dict>
                <key>1</key>
                <dict>
                  <key>name</key>
                  <string>constant.language.fitnesse</string>
                </dict>
                <key>2</key>
                <dict>
                  <key>name</key>
                  <string>variable.other.fitnesse</string>
                </dict>
              </dict>
              <key>comment</key>
              <string>really we should match the known attributes first</string>
              <key>match</key>
              <string>(\w+)\s*=?([^"']*?|'[^']*?'|"[^"]*?")?(?=,|\))</string>
              <key>name</key>
              <string>entity.other.attribute-name.fitnesse</string>
            </dict>
            <dict>
              <key>include</key>
              <string>#variable</string>
            </dict>
          </array>
        </dict>
      </array>
    </dict>

    <!-- sys:commands -->
    <key>commands</key>
    <dict>
      <key>patterns</key>
      <array>
        <dict>
          <key>comment</key>
          <string>Verb-Noun pattern:</string>
          <key>match</key>
          <string>(?:(\p{L}|\d|_|-|\\|\:)*\\)?\b(?i:Add|Approve|Assert|Backup|Block|Checkpoint|Clear|Close|Compare|Complete|Compress|Confirm|Connect|Convert|ConvertFrom|ConvertTo|Copy|Debug|Deny|Disable|Disconnect|Dismount|Edit|Enable|Enter|Exit|Expand|Export|Find|Format|Get|Grant|Group|Hide|Import|Initialize|Install|Invoke|Join|Limit|Lock|Measure|Merge|Mount|Move|New|Open|Optimize|Out|Ping|Pop|Protect|Publish|Push|Read|Receive|Redo|Register|Remove|Rename|Repair|Request|Reset|Resize|Resolve|Restart|Restore|Resume|Revoke|Save|Search|Select|Send|Set|Show|Skip|Split|Start|Step|Stop|Submit|Suspend|Switch|Sync|Test|Trace|Unblock|Undo|Uninstall|Unlock|Unprotect|Unpublish|Unregister|Update|Use|Wait|Watch|Write)\-.+?(?:\.(?i:exe|cmd|bat|ps1))?\b</string>
          <key>name</key>
          <string>support.function.fitnesse</string>
        </dict>
        <dict>
          <key>comment</key>
          <string>Builtin cmdlets with reserved verbs</string>
          <key>match</key>
          <string>(?&lt;!\w)(?i:foreach-object)(?!\w)</string>
          <key>name</key>
          <string>support.function.fitnesse</string>
        </dict>
      </array>
    </dict>

    <!-- sys:commentEmbeddedDocs -->
    <key>commentEmbeddedDocs</key>
    <dict>
      <key>patterns</key>
      <array>
        <dict>
          <key>captures</key>
          <dict>
            <key>1</key>
            <dict>
              <key>name</key>
              <string>constant.string.documentation.fitnesse</string>
            </dict>
            <key>2</key>
            <dict>
              <key>name</key>
              <string>keyword.operator.documentation.fitnesse</string>
            </dict>
          </dict>
          <key>match</key>
          <string>(?i:\s*(\.)(SYNOPSIS|DESCRIPTION|EXAMPLE|INPUTS|OUTPUTS|NOTES|LINK|COMPONENT|FUNCTIONALITY))</string>
          <key>name</key>
          <string>comment.documentation.embedded.fitnesse</string>
        </dict>
        <dict>
          <key>captures</key>
          <dict>
            <key>1</key>
            <dict>
              <key>name</key>
              <string>constant.string.documentation.fitnesse</string>
            </dict>
            <key>2</key>
            <dict>
              <key>name</key>
              <string>keyword.operator.documentation.fitnesse</string>
            </dict>
            <key>3</key>
            <dict>
              <key>name</key>
              <string>keyword.operator.documentation.fitnesse</string>
            </dict>
          </dict>
          <key>match</key>
          <string>(?i:\s*(\.)(PARAMETER|FORWARDHELPTARGETNAME|FORWARDHELPCATEGORY|REMOTEHELPRUNSPACE|EXTERNALHELP)\s+([a-z0-9-_]+))</string>
          <key>name</key>
          <string>comment.documentation.embedded.fitnesse</string>
        </dict>
        <dict>
          <key>captures</key>
          <dict>
            <key>1</key>
            <dict>
              <key>name</key>
              <string>constant.string.documentation.fitnesse</string>
            </dict>
            <key>2</key>
            <dict>
              <key>name</key>
              <string>keyword.operator.documentation.fitnesse</string>
            </dict>
            <key>3</key>
            <dict>
              <key>name</key>
              <string>string.quoted.double.heredoc.fitnesse</string>
            </dict>
          </dict>
          <key>match</key>
          <string>(?i:requires\s+-(Version\s+\d(.\d+)?|Assembly\s+(.*)|Module\s+(.*)|PsSnapIn\s+(.*)|ShellId\s+(.*)))</string>
          <key>name</key>
          <string>comment.documentation.embedded.fitnesse</string>
        </dict>
      </array>
    </dict>

    <!-- sys:doubleQuotedStringEscapes -->
    <key>doubleQuotedStringEscapes</key>
    <dict>
      <key>patterns</key>
      <array>
        <dict>
          <key>match</key>
          <string>`[0abnfrvt"'$`]</string>
          <key>name</key>
          <string>constant.character.escape.fitnesse</string>
        </dict>
        <dict>
          <key>match</key>
          <string>""</string>
          <key>name</key>
          <string>constant.character.escape.fitnesse</string>
        </dict>        
      </array>
    </dict>

    <!-- sys:function -->
    <key>function</key>
    <dict>
      <key>begin</key>
      <string>((?i:function|configuration|workflow))\s+((?:\p{L}|\d|_|-|\.)+)</string>
      <key>beginCaptures</key>
      <dict>
        <key>0</key>
        <dict>
          <key>name</key>
          <string>meta.function</string>
        </dict>
        <key>1</key>
        <dict>
          <key>name</key>
          <string>storage.type</string>
        </dict>
        <key>2</key>
        <dict>
          <key>name</key>
          <string>entity.name.function</string>
        </dict>
      </dict>
      <key>end</key>
      <string>\{|\(</string>
    </dict>

    <!-- sys:interpolatedStringContent -->
    <key>interpolatedStringContent</key>
    <dict>
      <key>begin</key>
      <string>\(</string>
      <key>beginCaptures</key>
      <dict>
        <key>0</key>
        <dict>
          <key>name</key>
          <string>keyword.other.fitnesse</string>
        </dict>
      </dict>
      <key>contentName</key>
      <string>interpolated.simple.source.fitnesse</string>
      <key>end</key>
      <string>\)</string>
      <key>endCaptures</key>
      <dict>
        <key>0</key>
        <dict>
          <key>name</key>
          <string>keyword.other.fitnesse</string>
        </dict>
      </dict>
      <key>patterns</key>
      <array>
        <dict>
          <key>include</key>
          <string>$self</string>
        </dict>
        <dict>
          <key>include</key>
          <string>#interpolation</string>
        </dict>
        <dict>
          <key>include</key>
          <string>#interpolatedStringContent</string>
        </dict>
      </array>
    </dict>

    <!-- sys:interpolation -->
    <key>interpolation</key>
    <dict>
      <key>begin</key>
      <string>(\$)\(</string>
      <key>beginCaptures</key>
      <dict>
        <key>0</key>
        <dict>
          <key>name</key>
          <string>keyword.other.fitnesse</string>
        </dict>
      </dict>
      <key>contentName</key>
      <string>interpolated.complex.source.fitnesse</string>
      <key>end</key>
      <string>\)</string>
      <key>endCaptures</key>
      <dict>
        <key>0</key>
        <dict>
          <key>name</key>
          <string>keyword.other.fitnesse</string>
        </dict>
      </dict>
      <key>patterns</key>
      <array>
        <dict>
          <key>include</key>
          <string>$self</string>
        </dict>
        <dict>
          <key>include</key>
          <string>#interpolation</string>
        </dict>
        <dict>
          <key>include</key>
          <string>#interpolatedStringContent</string>
        </dict>
      </array>
    </dict>

    <!-- sys:numericConstant -->
    <key>numericConstant</key>
    <dict>
      <key>patterns</key>
      <array>
        <dict>
          <key>captures</key>
          <dict>
            <key>1</key>
            <dict>
              <key>name</key>
              <string>keyword.operator.math.fitnesse</string>
            </dict>
            <key>2</key>
            <dict>
              <key>name</key>
              <string>support.constant.fitnesse</string>
            </dict>
            <key>3</key>
            <dict>
              <key>name</key>
              <string>keyword.other.fitnesse</string>
            </dict>
          </dict>
          <key>match</key>
          <string>(?&lt;!\w)(?i:(0x)([a-f0-9]+)((?i:L)?(?i:[kmgtp]b)?))(?!\w)</string>
          <key>name</key>
          <string>constant.numeric.hexadecimal.fitnesse</string>
        </dict>
        <dict>
          <key>captures</key>
          <dict>
            <key>1</key>
            <dict>
              <key>name</key>
              <string>support.constant.fitnesse</string>
            </dict>
            <key>2</key>
            <dict>
              <key>name</key>
              <string>keyword.operator.math.fitnesse</string>
            </dict>
            <key>3</key>
            <dict>
              <key>name</key>
              <string>support.constant.fitnesse</string>
            </dict>
            <key>4</key>
            <dict>
              <key>name</key>
              <string>keyword.other.fitnesse</string>
            </dict>
            <key>5</key>
            <dict>
              <key>name</key>
              <string>keyword.other.fitnesse</string>
            </dict>
          </dict>
          <key>match</key>
          <string>(?&lt;!\w)(?i:(\d*\.?\d+)(?:((?i:E)[+-]?)(\d+))?((?i:[DL])?)((?i:[kmgtp]b)?))(?!\w)</string>
          <key>name</key>
          <string>constant.numeric.scientific.fitnesse</string>
        </dict>
      </array>
    </dict>

    <!-- sys:scriptblock -->
    <key>scriptblock</key>
    <dict>
      <key>begin</key>
      <string>\{</string>
      <key>end</key>
      <string>\}</string>
      <key>name</key>
      <string>meta.scriptblock.fitnesse</string>
      <key>patterns</key>
      <array>
        <dict>
          <key>include</key>
          <string>$self</string>
        </dict>
      </array>
    </dict>

    <!-- sys:type -->
    <key>type</key>
    <dict>
      <key>begin</key>
      <string>\[</string>
      <key>beginCaptures</key>
      <dict>
        <key>0</key>
        <dict>
          <key>name</key>
          <string>entity.other.attribute-name</string>
        </dict>
      </dict>
      <key>comment</key>
      <string>name should be entity.name.type but default schema doesn't have a good color for it</string>
      <key>end</key>
      <string>\]</string>
      <key>endCaptures</key>
      <dict>
        <key>0</key>
        <dict>
          <key>name</key>
          <string>entity.other.attribute-name</string>
        </dict>
      </dict>
      <key>patterns</key>
      <array>
        <dict>
          <key>match</key>
          <string>(\p{L}|\.|``\d+)+?</string>
          <key>name</key>
          <string>entity.other.attribute-name</string>
        </dict>
        <dict>
          <key>include</key>
          <string>$self</string>
        </dict>
      </array>
    </dict>

    <!-- sys:variable -->
    <key>variable</key>
    <dict>
      <key>patterns</key>
      <array>
        <dict>
          <key>captures</key>
          <dict>
            <key>1</key>
            <dict>
              <key>name</key>
              <string>keyword.other.fitnesse</string>
            </dict>
            <key>2</key>
            <dict>
              <key>name</key>
              <string>constant.language.fitnesse</string>
            </dict>
          </dict>
          <key>comment</key>
          <string>These are special constants.</string>
          <key>match</key>
          <string>(\$)(?i:(False|Null|True))\b</string>
        </dict>
        <dict>
          <key>captures</key>
          <dict>
            <key>1</key>
            <dict>
              <key>name</key>
              <string>keyword.other.fitnesse</string>
            </dict>
            <key>2</key>
            <dict>
              <key>name</key>
              <string>support.constant.variable.fitnesse</string>
            </dict>
            <key>3</key>
            <dict>
              <key>name</key>
              <string>entity.name.function.invocation.fitnesse</string>
            </dict>
          </dict>
          <key>comment</key>
          <string>These are the other built-in constants.</string>
          <key>match</key>
          <string>(\$)(?i:(Error|ExecutionContext|Host|Home|PID|PsHome|PsVersionTable|ShellID))((?:\.(?:\p{L}|\d|_)+)*\b)?\b</string>
        </dict>
        <dict>
          <key>captures</key>
          <dict>
            <key>1</key>
            <dict>
              <key>name</key>
              <string>keyword.other.fitnesse</string>
            </dict>
            <key>2</key>
            <dict>
              <key>name</key>
              <string>support.constant.automatic.fitnesse</string>
            </dict>
            <key>3</key>
            <dict>
              <key>name</key>
              <string>entity.name.function.invocation.fitnesse</string>
            </dict>
          </dict>
          <key>comment</key>
          <string>Automatic variables are not constants, but they are read-only. In monokai (default) color schema support.variable doesn't have color, so we use constant.</string>
          <key>match</key>
          <string>(\$)(?i:(\$|\^|\?|_|Args|ConsoleFileName|Event|EventArgs|EventSubscriber|ForEach|Input|LastExitCode|Matches|MyInvocation|NestedPromptLevel|Profile|PSBoundParameters|PsCmdlet|PsCulture|PSDebugContext|PSItem|PSCommandPath|PSScriptRoot|PsUICulture|Pwd|Sender|SourceArgs|SourceEventArgs|StackTrace|Switch|This))((?:\.(?:\p{L}|\d|_)+)*\b)?\b</string>
        </dict>
        <dict>
          <key>captures</key>
          <dict>
            <key>1</key>
            <dict>
              <key>name</key>
              <string>keyword.other.fitnesse</string>
            </dict>
            <key>2</key>
            <dict>
              <key>name</key>
              <string>variable.language.fitnesse</string>
            </dict>
            <key>3</key>
            <dict>
              <key>name</key>
              <string>entity.name.function.invocation.fitnesse</string>
            </dict>
          </dict>
          <key>comment</key>
          <string>Style preference variables as language variables so that they stand out.</string>
          <key>match</key>
          <string>(\$)(?i:(ConfirmPreference|DebugPreference|ErrorActionPreference|ErrorView|FormatEnumerationLimit|MaximumAliasCount|MaximumDriveCount|MaximumErrorCount|MaximumFunctionCount|MaximumHistoryCount|MaximumVariableCount|OFS|OutputEncoding|ProgressPreference|PsCulture|PSDebugContext|PSDefaultParameterValues|PSEmailServer|PSItem|PSModuleAutoloadingPreference|PSSenderInfo|PSSessionApplicationName|PSSessionConfigurationName|PSSessionOption|VerbosePreference|WarningPreference|WhatIfPreference))((?:\.(?:\p{L}|\d|_)+)*\b)?\b</string>
        </dict>
        <dict>
          <key>captures</key>
          <dict>
            <key>1</key>
            <dict>
              <key>name</key>
              <string>keyword.other.fitnesse</string>
            </dict>
            <key>2</key>
            <dict>
              <key>name</key>
              <string>storage.modifier.scope.fitnesse</string>
            </dict>
            <key>3</key>
            <dict>
              <key>name</key>
              <string>variable.other.normal.fitnesse</string>
            </dict>
            <key>4</key>
            <dict>
              <key>name</key>
              <string>entity.name.function.invocation.fitnesse</string>
            </dict>
          </dict>
          <key>match</key>
          <string>(?i:(\$)(global|local|private|script|using|workflow):((?:\p{L}|\d|_)+))((?:\.(?:\p{L}|\d|_)+)*\b)?</string>
        </dict>
        <dict>
          <key>captures</key>
          <dict>
            <key>1</key>
            <dict>
              <key>name</key>
              <string>keyword.other.fitnesse</string>
            </dict>
            <key>2</key>
            <dict>
              <key>name</key>
              <string>storage.modifier.scope.fitnesse</string>
            </dict>
            <key>3</key>
            <dict>
              <key>name</key>
              <string>variable.other.readwrite.fitnesse</string>
            </dict>
            <key>4</key>
            <dict>
              <key>name</key>
              <string>keyword.other.fitnesse</string>
            </dict>
            <key>5</key>
            <dict>
              <key>name</key>
              <string>entity.name.function.invocation.fitnesse</string>
            </dict>
          </dict>
          <key>match</key>
          <string>(?i:(\$\{)(global|local|private|script|using|workflow):([^}]*[^}`])(\}))((?:\.(?:\p{L}|\d|_)+)*\b)?</string>
        </dict>
        <!-- scenario param -->
        <dict>
          <key>captures</key>
          <dict>
            <key>1</key>
            <dict>
              <key>name</key>
              <string>keyword.other.fitnesse</string>
            </dict>
            <key>2</key>
            <dict>
              <key>name</key>
              <string>variable.parameter.fitnesse</string>
            </dict>
          </dict>
          <key>match</key>
          <string>(\@)((?:\p{L}|\d|_)+)</string>
        </dict>

        <!-- powershell varaible -->
        <dict>
          <key>captures</key>
          <dict>
            <key>1</key>
            <dict>
              <key>name</key>
              <string>keyword.other.fitnesse</string>
            </dict>
            <key>2</key>
            <dict>
              <key>name</key>
              <string>support.variable.drive.fitnesse</string>
            </dict>
            <key>3</key>
            <dict>
              <key>name</key>
              <!-- <string>variable.other.readwrite.fitnesse</string> -->
              <string>variable.parameter.fitnesse</string>
            </dict>
            <key>4</key>
            <dict>
              <key>name</key>
              <string>entity.name.function.invocation.fitnesse</string>
            </dict>
          </dict>
          <key>match</key>
          <string>(?i:(\$)((?:\p{L}|\d|_)+:)?((?:\p{L}|\d|_)+))((?:\.(?:\p{L}|\d|_)+)*\b)?</string>
        </dict>

        <!-- macro varaible -->
        <dict>
          <key>captures</key>
          <dict>
            <key>1</key>
            <dict>
              <key>name</key>
              <string>keyword.other.fitnesse</string>
            </dict>
            <key>2</key>
            <dict>
              <key>name</key>
              <string>support.variable.drive.fitnesse</string>
            </dict>
            <key>3</key>
            <dict>
              <key>name</key>
              <!-- <string>variable.other.readwrite.fitnesse</string> -->
              <string>variable.parameter.fitnesse</string>
            </dict>
            <key>4</key>
            <dict>
              <key>name</key>
              <string>keyword.other.fitnesse</string>
            </dict>
            <key>5</key>
            <dict>
              <key>name</key>
              <string>entity.name.function.invocation.fitnesse</string>
            </dict>
          </dict>
          <key>match</key>
          <string>(?i:(\$\{)((?:\p{L}|\d|_)+:)?([^}]*[^}`])(\}))((?:\.(?:\p{L}|\d|_)+)*\b)?</string>
        </dict>
      </array>
    </dict>

    <!-- sys:variableFitEscape -->
    <key>variableFitEscape</key>
    <dict>
      <key>begin</key>
      <string>\-\!</string>
      <key>beginCaptures</key>
      <dict>
        <key>0</key>
        <dict>
          <key>name</key>
          <string>keyword.other.fitnesse</string>
        </dict>
      </dict>
      <key>end</key>
      <string>\!\-</string>
      <key>endCaptures</key>
      <dict>
        <key>0</key>
        <dict>
          <key>name</key>
          <string>keyword.other.fitnesse</string>
        </dict>
      </dict>
      <key>patterns</key>
      <array>
        <dict>
          <key>include</key>
          <string>#variable</string>
        </dict>
      </array>
    </dict>

    <!-- sys:variableNoProperty -->
    <key>variableNoProperty</key>
    <dict>
      <key>patterns</key>
      <array>
        <dict>
          <key>captures</key>
          <dict>
            <key>1</key>
            <dict>
              <key>name</key>
              <string>keyword.other.fitnesse</string>
            </dict>
            <key>2</key>
            <dict>
              <key>name</key>
              <string>constant.language.fitnesse</string>
            </dict>
          </dict>
          <key>comment</key>
          <string>These are special constants.</string>
          <key>match</key>
          <string>(\$)(?i:(False|Null|True))\b</string>
        </dict>
        <dict>
          <key>captures</key>
          <dict>
            <key>1</key>
            <dict>
              <key>name</key>
              <string>keyword.other.fitnesse</string>
            </dict>
            <key>2</key>
            <dict>
              <key>name</key>
              <string>support.constant.variable.fitnesse</string>
            </dict>
            <key>3</key>
            <dict>
              <key>name</key>
              <string>entity.name.function.invocation.fitnesse</string>
            </dict>
          </dict>
          <key>comment</key>
          <string>These are the other built-in constants.</string>
          <key>match</key>
          <string>(\$)(?i:(Error|ExecutionContext|Host|Home|PID|PsHome|PsVersionTable|ShellID))\b</string>
        </dict>
        <dict>
          <key>captures</key>
          <dict>
            <key>1</key>
            <dict>
              <key>name</key>
              <string>keyword.other.fitnesse</string>
            </dict>
            <key>2</key>
            <dict>
              <key>name</key>
              <string>support.variable.automatic.fitnesse</string>
            </dict>
            <key>3</key>
            <dict>
              <key>name</key>
              <string>entity.name.function.invocation.fitnesse</string>
            </dict>
          </dict>
          <key>comment</key>
          <string>Automatic variables are not constants, but they are read-only...</string>
          <key>match</key>
          <string>(\$)(?i:(\$|\^|\?|_|Args|ConsoleFileName|Event|EventArgs|EventSubscriber|ForEach|Input|LastExitCode|Matches|MyInvocation|NestedPromptLevel|Profile|PSBoundParameters|PsCmdlet|PsCulture|PSDebugContext|PSItem|PSCommandPath|PSScriptRoot|PsUICulture|Pwd|Sender|SourceArgs|SourceEventArgs|StackTrace|Switch|This))\b</string>
        </dict>
        <dict>
          <key>captures</key>
          <dict>
            <key>1</key>
            <dict>
              <key>name</key>
              <string>keyword.other.fitnesse</string>
            </dict>
            <key>2</key>
            <dict>
              <key>name</key>
              <string>variable.language.fitnesse</string>
            </dict>
            <key>3</key>
            <dict>
              <key>name</key>
              <string>entity.name.function.invocation.fitnesse</string>
            </dict>
          </dict>
          <key>comment</key>
          <string>Style preference variables as language variables so that they stand out.</string>
          <key>match</key>
          <string>(\$)(?i:(ConfirmPreference|DebugPreference|ErrorActionPreference|ErrorView|FormatEnumerationLimit|MaximumAliasCount|MaximumDriveCount|MaximumErrorCount|MaximumFunctionCount|MaximumHistoryCount|MaximumVariableCount|OFS|OutputEncoding|ProgressPreference|PsCulture|PSDebugContext|PSDefaultParameterValues|PSEmailServer|PSItem|PSModuleAutoloadingPreference|PSSenderInfo|PSSessionApplicationName|PSSessionConfigurationName|PSSessionOption|VerbosePreference|WarningPreference|WhatIfPreference))\b</string>
        </dict>
        <dict>
          <key>captures</key>
          <dict>
            <key>1</key>
            <dict>
              <key>name</key>
              <string>keyword.other.fitnesse</string>
            </dict>
            <key>2</key>
            <dict>
              <key>name</key>
              <string>storage.modifier.scope.fitnesse</string>
            </dict>
            <key>3</key>
            <dict>
              <key>name</key>
              <string>variable.other.normal.fitnesse</string>
            </dict>
            <key>4</key>
            <dict>
              <key>name</key>
              <string>entity.name.function.invocation.fitnesse</string>
            </dict>
          </dict>
          <key>match</key>
          <string>(?i:(\$)(global|local|private|script|using|workflow):((?:\p{L}|\d|_)+))</string>
        </dict>
        <dict>
          <key>captures</key>
          <dict>
            <key>1</key>
            <dict>
              <key>name</key>
              <string>keyword.other.fitnesse</string>
            </dict>
            <key>2</key>
            <dict>
              <key>name</key>
              <string>storage.modifier.scope.fitnesse</string>
            </dict>
            <key>3</key>
            <dict>
              <key>name</key>
              <string>variable.other.readwrite.fitnesse</string>
            </dict>
            <key>4</key>
            <dict>
              <key>name</key>
              <string>keyword.other.fitnesse</string>
            </dict>
            <key>5</key>
            <dict>
              <key>name</key>
              <string>entity.name.function.invocation.fitnesse</string>
            </dict>
          </dict>
          <key>match</key>
          <string>(?i:(\$\{)(global|local|private|script|using|workflow):([^}]*[^}`])(\}))</string>
        </dict>
        <dict>
          <key>captures</key>
          <dict>
            <key>1</key>
            <dict>
              <key>name</key>
              <string>keyword.other.fitnesse</string>
            </dict>
            <key>2</key>
            <dict>
              <key>name</key>
              <string>support.variable.drive.fitnesse</string>
            </dict>
            <key>3</key>
            <dict>
              <key>name</key>
              <string>variable.other.readwrite.fitnesse</string>
            </dict>
            <key>4</key>
            <dict>
              <key>name</key>
              <string>entity.name.function.invocation.fitnesse</string>
            </dict>
          </dict>
          <key>match</key>
          <string>(?i:(\$)((?:\p{L}|\d|_)+:)?((?:\p{L}|\d|_)+))</string>
        </dict>
        <dict>
          <key>captures</key>
          <dict>
            <key>1</key>
            <dict>
              <key>name</key>
              <string>keyword.other.fitnesse</string>
            </dict>
            <key>2</key>
            <dict>
              <key>name</key>
              <string>support.variable.drive.fitnesse</string>
            </dict>
            <key>3</key>
            <dict>
              <key>name</key>
              <string>variable.other.readwrite.fitnesse</string>
            </dict>
            <key>4</key>
            <dict>
              <key>name</key>
              <string>keyword.other.fitnesse</string>
            </dict>
            <key>5</key>
            <dict>
              <key>name</key>
              <string>entity.name.function.invocation.fitnesse</string>
            </dict>
          </dict>
          <key>match</key>
          <string>(?i:(\$\{)((?:\p{L}|\d|_)+:)?([^}]*[^}`])(\}))</string>
        </dict>
      </array>
    </dict>

  </dict>
  <key>scopeName</key>
  <string>source.fitnesse</string>
  <key>uuid</key>
  <string>2beb6a3d-8f32-4ace-ad55-7d705348b1b8</string>
</dict>
</plist>
